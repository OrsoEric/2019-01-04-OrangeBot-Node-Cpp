/****************************************************************
**	OrangeBot  Project
*****************************************************************************
**        /
**       /
**      /
** ______ \
**         \
**          \
*****************************************************************************
**
*****************************************************************************
**	Author: 			Orso Eric
**	Creation Date:
**	Last Edit Date:
**	Revision:			1
**	Version:			0.1 ALFA
****************************************************************************/

/****************************************************************************
**	HYSTORY VERSION
*****************************************************************************
**
****************************************************************************/

/****************************************************************************
**	DESCRIPTION
*****************************************************************************
**
****************************************************************************/

/****************************************************************************
**	KNOWN BUG
*****************************************************************************
**
****************************************************************************/

/****************************************************************************
**	INCLUDE
****************************************************************************/

//Standard C Libraries
#include <cstdio>
//#include <cstdlib>
#include <stdint.h>

//Standard C++ libraries
#include <iostream>
//#include <array>
//#include <vector>
//#include <queue>
//#include <string>
//#include <fstream>
//#include <chrono>
//#include <thread>

//OS Libraries
//#define _WIN32_WINNT 0x0500	//Enable GetConsoleWindow
//#include <windows.h>

//User Libraries
//Include user log trace
//#define ENABLE_DEBUG
#include "debug.h"

#include "uniparser.h"

#include "ob.h"

/****************************************************************************
**	NAMESPACES
****************************************************************************/

namespace Orangebot
{

/****************************************************************************
**	GLOBAL VARIABILE
****************************************************************************/

//R parser used to decode messages from the motor board
Orangebot::Uniparser g_orangebot_motor_board_rx_parser;
//Latest PWM packet reading
int g_pwm[ NUM_VNH7040PWM ];

/****************************************************************************
**	FUNCTION PROTOTYPES
****************************************************************************/

//Handle the PWM message from the motor board
void get_vnh7040_pwm_handler( int16_t pwm0, int16_t pwm1 );

/****************************************************************************
**	FUNCTION
****************************************************************************/

/***************************************************************************/
//!	@brief
//!
/***************************************************************************/
//! @param x |
//! @return void |
//! @details
/***************************************************************************/

void orangebotNodeCppInit( void )
{
	//Trace Enter with arguments
	DENTER();

	//----------------------------------------------------------------
	//	VARS
	//----------------------------------------------------------------

	bool f_ret = false;

	//----------------------------------------------------------------
	//	INIT
	//----------------------------------------------------------------

	//----------------------------------------------------------------
	//	BODY
	//----------------------------------------------------------------

	//Initialize parser class
	g_orangebot_motor_board_rx_parser = Orangebot::Uniparser();
	//Register command
	//f_ret = g_orangebot_motor_board_rx_parser.add_cmd( "SHAKA", (void *)&get_vnh7040_pwm_handler);
	//Register command
	f_ret |= g_orangebot_motor_board_rx_parser.add_cmd( "PWM:%S:%S", (void *)&get_vnh7040_pwm_handler);
	//If: fail
	if (f_ret == true)
	{
        DPRINT("ERR: Failed to register command\n");
	}
	//Initialize parser
	g_orangebot_motor_board_rx_parser.exe('\0');

	//----------------------------------------------------------------
	//	RETURN
	//----------------------------------------------------------------

	DRETURN();
	return;
}	//end function:


/***************************************************************************/
//!	@brief
//!	get_vnh7040_pwm_handler | int16_t | int16_t
/***************************************************************************/
//! @param x |
//! @return void |
//! @details
/***************************************************************************/

void get_vnh7040_pwm_handler( int16_t pwm0, int16_t pwm1 )
{
	//Trace Enter
	DENTER_ARG("pwm0: %d | pwm1: %d\n", pwm0, pwm1);

	//----------------------------------------------------------------
	//	VARS
	//----------------------------------------------------------------

	//----------------------------------------------------------------
	//	INIT
	//----------------------------------------------------------------

	//----------------------------------------------------------------
	//	BODY
	//----------------------------------------------------------------

	g_pwm[0] = pwm0;
	g_pwm[1] = pwm1;

	//----------------------------------------------------------------
	//	RETURN
	//----------------------------------------------------------------

	DRETURN();
	return;
}	//end function:	get_vnh7040_pwm_handler | int16_t | int16_t

/***************************************************************************/
//!	@brief
//!	orangebotParse | std::string
/***************************************************************************/
//! @param x |
//! @return void |
//! @details
/***************************************************************************/

void orangebotParse( std::string str )
{
	//Trace Enter with arguments
	DENTER_ARG( "%s\n", str.c_str() );

	//----------------------------------------------------------------
	//	VARS
	//----------------------------------------------------------------

	//Counter
	int t;

	//----------------------------------------------------------------
	//	INIT
	//----------------------------------------------------------------

	//----------------------------------------------------------------
	//	BODY
	//----------------------------------------------------------------

	//For: all cahr in the string
	for (t = 0;t <= str.length() ;t++)
	{
		//Extract char and feed it to the parser
		g_orangebot_motor_board_rx_parser.exe( str[t] );
		DPRINT(">%x<\n", str[t]);
	} //End for:

	//----------------------------------------------------------------
	//	RETURN
	//----------------------------------------------------------------

	DRETURN();
	return;
}	//end function: orangebotParse | std::string

/***************************************************************************/
//!	@brief
//!	get_pwm | int |
/***************************************************************************/
//! @param x |
//! @return void |
//! @details
/***************************************************************************/

int get_pwm( int channel )
{
	//Trace Enter with arguments
	DENTER_ARG("channel: %d\n", channel);

	//----------------------------------------------------------------
	//	VARS
	//----------------------------------------------------------------

	//----------------------------------------------------------------
	//	INIT
	//----------------------------------------------------------------

	if (channel >= NUM_VNH7040PWM)
	{
		DRETURN_ARG("ERR: bad channel\n");
        return INT16_MIN;
	}

	//----------------------------------------------------------------
	//	BODY
	//----------------------------------------------------------------

	//----------------------------------------------------------------
	//	RETURN
	//----------------------------------------------------------------

	DRETURN_ARG( "reading: %d\n", g_pwm[ channel ] );
	return g_pwm[ channel ];
}	//end function: get_pwm | int |

/***************************************************************************/
//!	@brief
//!	function_template
/***************************************************************************/
//! @param x |
//! @return void |
//! @details
/***************************************************************************/

void function_template( void )
{
	//Trace Enter with arguments
	DENTER();

	//----------------------------------------------------------------
	//	VARS
	//----------------------------------------------------------------

	//----------------------------------------------------------------
	//	INIT
	//----------------------------------------------------------------

	//----------------------------------------------------------------
	//	BODY
	//----------------------------------------------------------------

	//----------------------------------------------------------------
	//	RETURN
	//----------------------------------------------------------------

	DRETURN();
	return;
}	//end function:

} //End namespace: Orangebot
